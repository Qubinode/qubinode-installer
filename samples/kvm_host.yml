---
kvm_host_gw: ""
kvm_host_interface: ""
kvm_host_ip: ""
kvm_host_macaddr: ""
kvm_host_mask_prefix: ""
kvm_host_netmask: ""
libvirt_pool_name_check: yes
skip_libvirt_pool: no

 # LVM
logical_volumes:
  - name: qubi_images
    size: "+100%FREE"
    mount_dir: "{{ kvm_host_libvirt_dir | default('/var/lib/libvirt/images') }}"
    fstype: xfs

# ROLE: swygue.edge_host_setup role
# the user that will admin the system
ssh_username: "{{ admin_user }}"

## This is for KVM host initial setup of /etc/resolv.conf
kvm_host_dns_server: "{{ idm_server_ip | default('1.1.1.1') }}"
kvm_bridge_type: Bridge
kvm_host_bootproto: none
kvm_host_domain: "{{ domain }}"

# We leverage a bridge network for OCP3 installs
# and other VMS. This sets the name of the bridge to be created and use when
# deploying VMS. If there is an existing libvirt bridge network, set the name here instea.
qubinode_bridge_name: qubibr0

# RHEL 7.8 is the current tested RHEL 7 minor release.
# RHEL 8.2  is the current tested RHEL 8 minor release.
rhel_release: ""

# This variable is being phased out
run_qubinode_setup: yes

# Run storage check
run_storage_check: ""

# set path to libvirt images
kvm_host_libvirt_dir: /var/lib/libvirt/images
host_device: "{{ kvm_host_libvirt_extra_disk | default('nvme0n1') }}"
vg_name: vg_qubi
vm_libvirt_net_check: yes

# should a bridge interface be created
configure_bridge: true

# Set to no prevent the installer from attempting
# setup a LVM group for qubinode. Also set this to no
# if you already have you storage for lvm setup
create_lvm: yes

# used in playbook setup_kvmhost.yml
network_interface_name: "{{ kvm_host_interface }}"

# set storage device to dedicate to /var/lib/libvirt/images
kvm_host_libvirt_extra_disk: ""

# use by funciton check_hardware_resources
libvirt_pool_name: default

qubinode_installer_host_completed: no

# name of the libvirt network to use
vm_libvirt_net: "qubinet"

libvirt_network_name: "qubinat"

libvirt_host_networks:
  - name: "{{ vm_libvirt_net }}"
    create: true
    mode: bridge
    bridge_device: "{{ kvm_host_bridge_name | default(qubinode_bridge_name) }}"
    ifcfg_type: "{{ kvm_bridge_type }}"
    ifcfg_bootproto: "{{ kvm_host_bootproto }}"
    bridge_slave_dev: "{{ kvm_host_interface }}"
    gateway: "{{ kvm_host_gw }}"
    mask_prefix: "{{ kvm_host_mask_prefix }}"
    ipaddress: "{{ kvm_host_ip }}"
    mask: "{{ kvm_host_netmask }}"
    subnet: "not currently in use"
    mac: "{{ kvm_host_macaddr }}"

