---
######################################
#         USER VARIABLES             #
# The are automatically updated or   #
# you can update them manually       #
######################################
inventory_dir: ""
project_dir: ""
admin_user: ""
domain: ""

# RHEL Version
rhel_version: ""

# PTR - The PTR record that should be use
qubinode_ptr: changeme.in-addr.arpa

# Public DNS server
dns_forwarder: ""

# ROLE: swygue-redhat-subscription
# whether to use username/pass or RHSM
rhsm_reg_method: ""

######################################
#         SYSTEM VARIABLES           #
# You shouldn't need to change these #
######################################

# Ansible 2.6 is rhel-7-server-ansible-2.6-rpms
# Ansible 2.9 on rhel 7  rhel-7-server-ansible-2.9-rpms
rhel7_ansible_repo: rhel-7-server-ansible-2.9-rpms 
rhel8_ansible_repo: ansible-2.9-for-rhel-8-x86_64-rpms
ansible_version: 2.9.5
ansible_release: 2.9
#ansible_rpm: ansible-2.6.20-1.el7ae.noarch

# All VMs created name will begin with this prefix.
instance_prefix: qbn
preappend_host_name: "{{ instance_prefix }}-{{ product }}-"


vm_public_key: "/home/{{ admin_user }}/.ssh/id_rsa.pub"
update_inventory: true
vm_data_dir: "/var/lib/vmdata"
inventory_file: "{{ inventory_dir }}/hosts"
admin_user_password: "{{ admin_user_password }}"
kvm_vm_root_pwd: "{{ admin_user_password }}"
vm_domain: "{{ domain }}"
search_domains:
  - "{{ vm_domain }}"
# This is for /etc/resolv.conf
dns_servers:
  - "{{ idm_server_ip | default('1.1.1.1') }}"
  - 8.8.8.8

public_domain: "{{ domain }}"

qubinode_installer_setup_completed: no
qubinode_installer_rhsm_completed: no
qubinode_installer_ansible_completed: no
qubinode_base_reqs_completed: no

# Ensure VMs are always using static IP even when DHCP issued
static_ip: true

# ROLE: swygue-redhat-subscription
rhsm_org: "{{ rhsm_org }}"
rhsm_activationkey: "{{ rhsm_activationkey }}"
rhsm_org_id: "{{ rhsm_org }}"
rhsm_setup_insights_client: false
rhsm_user: "{{ rhsm_username }}"
rhsm_pass: "{{ rhsm_password }}"
org_id: "{{ rhsm_org }}"

# ROLE: swygue.edge_host_setup role
# the user that will admin the system
ssh_username: "{{ admin_user }}"

# ROLE: deploy-kvm-vm
#--------------------
# Use to create VM
# Red Hat Enterprise Linux 7.8 KVM Guest Image
os_qcow_image_name: rhel-server-7.8-x86_64-kvm.qcow2 
os_qcow_image_checksum: ce4943d38e00a5c81272ebd3f3542b2d9557382d1c331c46ed553fdcca778b2d
cloud_init_vm_image: "{{ os_qcow_image_name }}"

# setting this to true will result is no VMs being created and any existing vms to be deleted
vm_teardown: False

ipa_client_principal: "{{ idm_admin_user }}"
ipa_client_pass: "{{ idm_dm_pwd }}"
ipa_host: "{{ idm_hostname }}.{{ domain }}"
ipa_client_install_flags: "--server='{{ ipa_host }}' --realm='{{ idm_realm }}' --mkhomedir --enable-dns-updates -N --domain='{{ domain }}'"

 # LVM
logical_volumes:
  - name: qubi_images
    size: "+100%FREE"
    mount_dir: "{{ kvm_host_libvirt_dir | default('/var/lib/libvirt/images') }}"
    fstype: xfs


#################################
#   Virtual Machines Variables  #
#################################

# Hardware profiles
qubinode_minimal_memory: 30
qubinode_standard_memory: 80
qubinode_performance_memory: 88

# We are not enforcing acutal sizes at this time
qubinode_minimal_storage: 370      # actual is 640
qubinode_standard_storage: 900     # actual is 1160
qubinode_performance_storage: 1340 # actual is 1340

# your system profile
storage_profile: ""
memory_profile: ""
ocp_cluster_size: ""
warn_storage_profile: yes

libvirt_host_networks:
  - name: "{{ nat_network_name }}"
    create: true
    mode: nat
    int_domain: compute.local
    external_domain: "{{ public_domain }}"
    mac_start: "52:54:00:"
    master_count: 3
    compute_count: 2
    subnet: "192.168.50.0"
    gateway: "192.168.50.1"
    mask: "255.255.255.0"
  - name: "{{ vm_libvirt_net }}"
    create: true
    mode: bridge
    bridge_device: "{{ kvm_host_bridge_name | default(qubinode_bridge_name) }}"
    ifcfg_type: "{{ kvm_bridge_type }}"
    ifcfg_bootproto: "{{ kvm_host_bootproto }}"
    bridge_slave_dev: "{{ kvm_host_interface }}"
    gateway: "{{ kvm_host_gw }}"
    mask_prefix: "{{ kvm_host_mask_prefix }}"
    ipaddress: "{{ kvm_host_ip }}"
    mask: "{{ kvm_host_netmask }}"
    mac: "{{ kvm_host_macaddr }}"

###########################################
# variables for swygue.edge_host_setup role


# This is required for OpenShift 4
# TODO: the codebase needs to up to look for this
# variable under playbooks/var/ocp4.yml
cluster_name: qbn

nat_network_name: "{{ cluster_name }}"

#This is for KVM host initial setup of /etc/resolv.conf
kvm_host_dns_server: "{{ idm_server_ip | default('1.1.1.1') }}"
kvm_bridge_type: Bridge
kvm_host_bootproto: none
kvm_host_domain: "{{ domain }}"

libvirt_pkgs:
   - virt-install
   - libvirt-daemon-config-network
   - libvirt-daemon-kvm
   - libguestfs-tools
   - libvirt-client
   - qemu-kvm
   - nfs-utils
   - libvirt-daemon
   - libvirt-client
   - virt-top
   - tuned
   - openssh-server
   - wget
   - git
   - net-tools
   - bind-utils
   - yum-utils
   - iptables-services
   - bridge-utils
   - bash-completion
   - kexec-tools
   - sos
   - psacct
   - vim
   - pyOpenSSL
   - device-mapper-event-libs
   - device-mapper-libs
   - httpd-tools
   - java-1.8.0-openjdk-devel.x86_64
   - tmux
   - python-dns

###########################
# General Networking Info #
###########################

####################
## VM Network Info
##-------------------
## Currently we assume the VMs will use the name network as the host
## This is why a bridge network is created by default. These values
## can be changed to reflect a different network.
vm_net_gateway: "{{ kvm_host_gw }}"
vm_net_netmask: "{{ kvm_host_netmask }}"
vm_gateway: "{{ vm_net_gateway }}"


###########################
# these should be deleted #
# #########################

# KVM host packages
qubi_required_pkgs: |
   "virt-install, libvirt-daemon-config-network, libvirt-daemon-kvm,
   libguestfs-tools, libvirt-client, qemu-kvm, nfs-utils, libvirt-daemon,
   libvirt-client, virt-top, cockpit, cockpit-networkmanager, cockpit-dashboard,
   cockpit-storaged, cockpit-packagekit, cockpit-machines, cockpit-sosreport,
   cockpit-kubernetes, cockpit-pcp, cockpit-bridge, tuned, openssh-server,
   wget, git, net-tools, bind-utils, yum-utils, iptables-services, bridge-utils,
   bash-completion, kexec-tools, sos, psacct, vim, ansible,
   pyOpenSSL, docker, device-mapper-event-libs, device-mapper-libs, httpd-tools, tmux, patch,  python-netaddr"
