---
- name: setup ocp3 jumpbox for ocp3 installation
  hosts: localhost
  vars_files:
    - vars/all.yml
    - vars/vault.yml
    - vars/ocp3.yml
  vars:
    install_enterprise_rpms: no
    installed_pkgs: []
  become: yes

  tasks:
  - name: include additional openshift variables
    include_vars: "vars/{{ openshift_product }}.yml"

  - name: include additional openshift variables
    include_vars: "vars/openshift3_size_{{ openshift_deployment_size }}.yml"

  - name: install base packages
    shell: >
      rpm -q "{{ item }}" || yum install -y "{{ item }}" && echo yes
    args:
      warn: false
    loop: "{{ libvirt_pkgs }}"
    register: pkg_installed
    changed_when: pkg_installed.stdout == 'yes'
    tags:
      - pkgs

#  - name: check if the openshift enterprise installer packages are installed
#    block:
#      - name: get info for each ansible rpm package
#        yum:
#          list: "{{ item }}"
#        loop: "{{ openshift_ansible_rpms }}"
#        register: openshift_jumphost_pkgs
#
#      - name: create list of install packages
#        set_fact:
#          installed_pkgs: "{{ installed_pkgs }} + [ '{{ item.item }}' ]"
#        loop: "{{ openshift_jumphost_pkgs.results }}"
#        when: item | selectattr("yumstate", "match", "installed")
#    when: openshift_deployment_type == 'openshift-enterprise'

  - name: install the openshift enterprise packages when not installed
    block:
      - name: Refresh subscription-manager
        command: subscription-manager refresh

      - name: Check if system is registered to use OpenShift Enterprise
        shell: subscription-manager list --consumed --matches 'Red Hat OpenShift Container Platform' --pool-only
        register: openshift_status
        failed_when: openshift_status.stdout == ""
    
      - name: Enable rhel-7-server-rpms repository
        rhsm_repository:
          name: rhel-7-server-rpms
    
      - name: Enable rhel-7-server-extras-rpms repository
        rhsm_repository:
          name: rhel-7-server-extras-rpms
          state: enabled
    
      - name: Enable rhel-7-server-optional-rpms repository
        rhsm_repository:
          name: rhel-7-server-optional-rpms
          state: enabled
        when: installed_pkgs | list | length <= 5
    
      - name: Enable rhel-7-server-ose-3.11-rpms repository
        rhsm_repository:
          name: rhel-7-server-ose-3.11-rpms
          state: enabled

      - name: Installing OpenShift Ansible RPM
        shell: >
           yum install -y "{{ item }}"
        args:
          warn: false
        loop: "{{ openshift_ansible_rpms }}"
        register: pkg_installed
        changed_when: pkg_installed.stdout == 'yes'
        tags:
          - pkgs
    when: openshift_deployment_type == 'openshift-enterprise'

  - name: check if the okd installer packages are installed
    block:
      - name: Add EPEL repository for OKD deployment
        yum_repository:
          name: epel
          description: EPEL YUM repo
          baseurl: https://download.fedoraproject.org/pub/epel/$releasever/$basearch/
    
      - name: Importing rpm gpg-key for OKD deployment.
        shell: |
           rpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7 >> /tmp/epelgpgimport.log
    
      - name: Cloning OpenShift release-3.11 to machine
        git:
          repo: 'https://github.com/openshift/openshift-ansible.git'
          dest: /home/{{ ssh_username }}/openshift-ansible
          version: release-3.11
    
      - name: change openshift-ansible owner to {{ ssh_username }}
        file:
          path: /home/{{ ssh_username }}/openshift-ansible
          owner: "{{ ssh_username }}"
          group: "{{ ssh_username }}"
          mode: 0775
    
      - name: Install oc cli while using OKD
        shell: |
          curl -OL https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz
          tar -xvf openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz -C /tmp
          cd /tmp/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit
          mv oc /usr/local/bin
          mv kubectl /usr/local/bin
    when: openshift_deployment_type == 'origin'
