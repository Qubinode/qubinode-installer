- name: Create OpenShift 4 Load Balancer
  hosts: localhost
  become: yes
  gather_facts: yes
  vars_files:
    - vars/all.yml
    - vars/vault.yml
    - vars/idm.yml
    - vars/ocp4.yml

  tasks:
    - name: check if loadbalancer has port 6443 open
      shell: ss -tp state listening sport = :6443 | grep https
      register: result
      ignore_errors: yes

    - debug: msg={{ result.stdout }}

    - meta: end_play
      when: result.stdout != ""

    - name: Setting Ingress information and machine configuration  for bootsrap nodes and other machines
      set_fact:
        tmp_api: "[ 'bootstrap={{ vn_subnet.split('.')[:3] | join('.')}}.2:6443' ]"
        tmp_api_listen: "[ '{{ listen_address }}:6443']"
        tmp_ingress_http: "[]"
        tmp_ingress_http_listen: "['{{ listen_address }}:80', '{{ vn_subnet.split('.')[:3] | join('.')}}.1:80' ]"
        tmp_ingress_https: "[]"
        tmp_ingress_https_listen: "['{{ listen_address }}:443', '{{ vn_subnet.split('.')[:3] | join('.')}}.1:443' ]"
        tmp_machine_config_server: "[ 'bootstrap={{ vn_subnet.split('.')[:3] | join('.')}}.2:22623' ]"
        tmp_machine_config_server_listen: "['{{ listen_address }}:22623', '{{ vn_subnet.split('.')[:3] | join('.')}}.1:22623']"
      ignore_errors: false

    - name: Setting Ingress information and machine configuration for  internal API Server
      set_fact:
        tmp_api: "{{ tmp_api }}  + [ '{{ vn_subnet.split('.')[:3] | join('.')}}.1:6443' ]"
        tmp_api_listen: "{{ tmp_api_listen }}  + [ '{{ vn_subnet.split('.')[:3] | join('.')}}.1:6443' ]"
      ignore_errors: false

    - name: Setting Ingress information and machine configuration for master nodes
      set_fact:
        tmp_api: "{{ tmp_api }}  + [ 'master-{{item}}={{ vn_subnet.split('.')[:3] | join('.')}}.{{ 10 + item|int }}:6443' ]"
        tmp_machine_config_server: "{{ tmp_machine_config_server }} + [ 'master-{{item}}={{ vn_subnet.split('.')[:3] | join('.')}}.{{ 10 + item|int }}:22623' ]"
      with_sequence: start=0 end="{{ master_count|int - 1 }}" stride=1
      ignore_errors: false

    - name: Setting Ingress information and machine configuration for compute nodes
      set_fact:
        tmp_ingress_http: "{{ tmp_ingress_http }} + [ 'compute-{{item}}={{ vn_subnet.split('.')[:3] | join('.')}}.{{ 13 + item|int }}:80' ]"
        tmp_ingress_https: "{{ tmp_ingress_https }} + [ 'compute-{{item}}={{ vn_subnet.split('.')[:3] | join('.')}}.{{ 13 + item|int }}:443' ]"
      with_sequence: start=0 end="{{ compute_count|int - 1 }}" stride=1
      ignore_errors: false

    - name: show lb_api
      debug:
        msg: "{{ tmp_api | join(',') }}"
      failed_when: tmp_api is not defined

    - name: show lb_api_listen
      debug:
        msg: "{{ tmp_api_listen | join(',') }}"
      failed_when: tmp_api_listen is not defined

    - name: show lb_ingress_http_listen
      debug:
        msg: "{{ tmp_ingress_http_listen | join(',') }}"
      failed_when: tmp_ingress_http_listen is not defined

    - name: show lb_ingress_http
      debug:
        msg: "{{ tmp_ingress_http | join(',') }}"
      failed_when: tmp_ingress_http is not defined

    - name: show lb_ingress_https
      debug:
        msg: "{{ tmp_ingress_https | join(',') }}"
      failed_when: tmp_ingress_https is not defined

    - name: show lb_ingress_https_listen
      debug:
        msg: "{{ tmp_ingress_https_listen | join(',') }}"
      failed_when: tmp_ingress_https_listen is not defined

    - name: show lb_machine_config_server
      debug:
        msg: "{{ tmp_machine_config_server | join(',') }}"
      failed_when: tmp_machine_config_server is not defined

    - name: show lb_machine_config_server_listen
      debug:
        msg: "{{ tmp_machine_config_server_listen | join(',') }}"
      failed_when: tmp_machine_config_server_listen is not defined

    - name: check if  Loadbalancer SystemD service exists
      stat:
        path: "/etc/systemd/system/{{ lb_name }}.service"
      register: lb_service

    - name: destroy old service
      import_role:
        name: openshift-4-loadbalancer
        tasks_from: destroy.yml
      vars:
        #lb_name: "{{ lb_name }}"
        lb_api: "{{ tmp_api | join(',') }}"
        lb_api_listen: "{{ tmp_api_listen | join(',') }}"
        lb_ingress_http: "{{ tmp_ingress_http | join(',') }}"
        lb_ingress_http_listen: "{{ tmp_ingress_http_listen | join(',') }}"
        lb_ingress_https: "{{ tmp_ingress_https | join(',') }}"
        lb_ingress_https_listen: "{{ tmp_ingress_https_listen | join(',') }}"
        lb_machine_config_server: "{{ tmp_machine_config_server | join(',') }}"
        lb_machine_config_server_listen: "{{ tmp_machine_config_server_listen | join(',') }}"
      when: lb_service.stat.exists == True

    - name: Create OpenShift 4 load balancer
      import_role:
        name: openshift-4-loadbalancer
        tasks_from: create.yml
      vars:
        #lb_name: "{{ lb_name }}"
        lb_api: "{{ tmp_api | join(',') }}"
        lb_api_listen: "{{ tmp_api_listen | join(',') }}"
        lb_ingress_http: "{{ tmp_ingress_http | join(',') }}"
        lb_ingress_http_listen: "{{ tmp_ingress_http_listen | join(',') }}"
        lb_ingress_https: "{{ tmp_ingress_https | join(',') }}"
        lb_ingress_https_listen: "{{ tmp_ingress_https_listen | join(',') }}"
        lb_machine_config_server: "{{ tmp_machine_config_server | join(',') }}"
        lb_machine_config_server_listen: "{{ tmp_machine_config_server_listen | join(',') }}"
