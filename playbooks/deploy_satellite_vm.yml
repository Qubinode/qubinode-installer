---
- name: Deploy the Satellite server virtual machine
  hosts: localhost
  become: yes
  gather_facts: yes
  vars_files:
    - vars/all.yml
    - vars/kvm_host.yml
    - vars/vault.yml
    - vars/idm.yml
    - vars/satellite_server.yml
  vars:
    vm_name: "{{ sat_server_vm.sat_name }}"
    vm_cpu: "{{ sat_server_vm.sat_vcpu }}"
    vm_memory: "{{ sat_server_vm.sat_memory }}"
    vm_root_disk_size: "{{ sat_server_vm.sat_root_disk_size }}"
    vm_teardown: "{{ sat_server_vm.sat_teardown }}"
    vm_recreate: "{{ sat_server_vm.sat_recreate }}"
    inventory_group: "{{ sat_server_vm.sat_group }}"
    extra_storage: "{{ sat_server_vm.sat_extra_storage }}"
    enable: "{{ sat_server_vm.sat_enable }}"
    satellite_is_installed: ""
  environment:
    IPA_HOST: "{{ ipa_host }}"
    IPA_USER: "{{ idm_admin_user }}"
    IPA_PASS: "{{ idm_admin_pwd }}"

  tasks:
    - name: Check if the Satellite server is already deployed
      uri:
        url: "https://{{ satellite_hostname }}.{{ satellite_domain }}/api/organizations"
        user: "{{ satellite_user }}"
        password: "{{ satellite_pass }}"
        force_basic_auth: yes
        validate_certs: no
      register: satellite_is_installed
      ignore_errors: yes
      tags: [ check-satellite ]
  
    - name: Set the var satellite_is_installed to true or false
      set_fact:
        satellite_is_installed: "{{ False if satellite_is_installed.failed | default(False) or satellite_is_installed.status != 200 else True }}"
      tags: [ check-satellite ]

    - name: Report satellite_is_installed value
      debug:
        var: satellite_is_installed
        verbosity: 3
      tags: [ check-satellite ]
      
    - name: Deploy Satellite server virtual machine
      when: not satellite_is_installed|bool or vm_teardown|bool
      include_role:
        name: deploy-kvm-vm
      tags: satellite_vm
        
    - name: REMOVE|ensure {{ vm_name }} is removed from inventory
      lineinfile:
        path: "{{ inventory_file }}"
        regexp: "^{{ vm_name }}"
        state: absent
      when: vm_teardown|bool