---
#IPA_HOST: "{{ ipa_host }}"
#    IPA_USER: "{{ idm_admin_user }}"
#    IPA_PASS: "{{ idm_admin_pwd }}"
#    IPA_TIMEOUT: 40


- name: Set the state DNS records state for VM {{ vm_name }}
  set_fact:
    dns_a_result: "none"
    dns_ptr_result: "none"
    record_state: "{{ 'absent' if vm_teardown|bool else 'present' }}"
    on_errors: "{{ 'yes' if vm_teardown|bool else 'no' }}"
  tags: create_dns_records

- name: Updating the dns records state for VM {{ vm_name }} to {{ record_state }}
  tags: create_dns_records
  block:
    - name: Update A record {{ hostvars[vm_name].inventory_hostname }}
      ipa_dnsrecord:
        #ipa_host: "{{ ipa_host }}"
        #ipa_user: "{{ idm_admin_user }}"
        #ipa_pass: "{{ idm_admin_pwd }}"
        #ipa_timeout: 40
        zone_name: "{{ domain }}"
        record_name: "{{ hostvars[vm_name].inventory_hostname }}"
        record_type: A
        #record_ttl: 300
        record_value: "{{ hostvars[vm_name].ansible_host }}"
        state: "{{ record_state }}"
        validate_certs: no
      register: a_record_result
    
    - name: Updating the PTR record {{ hostvars[vm_name].ansible_host }}
      ipa_dnsrecord:
        #ipa_host: "{{ ipa_host }}"
        #ipa_user: "{{ idm_admin_user }}"
        #ipa_pass: "{{ idm_admin_pwd }}"
        #ipa_timeout: 40
        zone_name: "{{ qubinode_ptr }}"
        record_name: "{{ hostvars[vm_name].ansible_host.split('.')[3:4] | join('.') }}"
        record_type: PTR
        #record_ttl: 300
        record_value: "{{ hostvars[vm_name].inventory_hostname }}.{{ domain }}."
        state: "{{ record_state }}"
        validate_certs: no
      register: ptr_record_result
  rescue:
    - name: There were errors updating A dns records for VM {{ vm_name }}
      debug:
         msg: > 
              "This usually happens when deleting a record that does not exist."
              "You can safely ignore the message or look back on the play run for the error message."

