---
- name: Deploy IDM VM
  hosts: localhost
  gather_facts: yes
  become: yes
  vars_files:
    - vars/all.yml
    - vars/kvm_host.yml
    - vars/vault.yml
    - vars/idm.yml
  vars:
    vm_name: "{{ dns_server_vm.dns_name }}"
    vm_cpu: "{{ dns_server_vm.dns_vcpu }}"
    vm_memory: "{{ dns_server_vm.dns_memory }}"
    vm_root_disk_size: "{{ dns_server_vm.dns_root_disk_size }}"
    vm_qcow_image:  "{{ cloud_init_vm_image }}"
    vm_teardown: "{{ dns_server_vm.dns_teardown }}"
    vm_recreate: "{{ dns_server_vm.dns_recreate }}"
    vm_ipaddress: "{{ dns_server_vm.dns_ip }}"
    vm_gateway: "{{ dns_server_vm.dns_gateway }}"
    vm_mask: "{{ dns_server_vm.dns_mask }}"
    vm_cidr: "{{ dns_server_vm.dns_mask }}"
    vm_mask_prefix: "{{ dns_server_vm.dns_mask_prefix }}"
    vm_domain: "{{ domain }}"
    inventory_group: "{{ dns_server_vm.dns_group }}"
    extra_storage: "{{ dns_server_vm.dns_extra_storage }}"
    enable: "{{ dns_server_vm.dns_enable }}"

  tasks:

    - name: Create KVM VM for DNS Server
      include_role:
        name: deploy-kvm-vm

    - name: ensure ansible-freeipa is installed
      ansible.builtin.git:
        repo: 'https://github.com/freeipa/ansible-freeipa.git'
        dest: "{{ playbook_dir }}/roles/ansible-freeipa"
        version: master
      delegate_to: 127.0.0.1
      become: yes
      tags: ansiblefreeipa
      when: not vm_teardown|bool

    - name: Ensure the KVM host is not pointing to the IdM server for DNS
      copy:
        content: |
          search {{ search_domains  | first }}
          nameserver 8.8.8.8
          nameserver 1.1.1.1
        dest: /etc/resolv.conf
      when: vm_teardown|bool
      tags: [ipaserver, resolv]


    - meta: refresh_inventory

    - name: Get the IP address of the IdM VM
      set_fact:
        current_vm_ip: "{{ hostvars[vm_name]['ansible_host'] }}"
      when: not vm_teardown|bool

    - name: update idm_public_ip with current IDM server IP
      lineinfile:
        dest: "{{ project_dir }}/playbooks/vars/idm.yml"
        regexp: '^idm_server_ip:'
        line: "idm_server_ip: {{ current_vm_ip }}"
        state: present
      when: not vm_teardown|bool
    
    - set_fact:
        etc_host_status: "{{ 'absent' if vm_teardown|bool else 'present' }}"

    - name: Add/Remove DNS server from inventory into /etc/hosts
      become: yes
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item }}$'
        line: "{{ hostvars[item]['ansible_host'] }} {{ item }}.{{ domain }} {{ item }}"
        state: "{{ etc_host_status }}"
      when: hostvars[item]['ansible_host'] is defined and hostvars[item]['inventory_hostname_short'] == vm_name
      with_items:
        - "{{ groups['ipaserver'] }}"
